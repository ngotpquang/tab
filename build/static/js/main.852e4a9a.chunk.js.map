{"version":3,"sources":["utils/delay.ts","hooks/useHover.ts","components/OptionHideShow.tsx","components/FolderHeader.tsx","actions/index.ts","hooks/useMappedActions.ts","config/constants.ts","components/BookmarkGridItem.tsx","utils/getFaviconUrl.ts","components/BookmarkGrid.tsx","components/FolderList.tsx","components/SearchBar.tsx","components/LogoImage.tsx","hooks/useKeyboardPress.ts","components/Header.tsx","utils/compareIndexes.ts","selectors/getIsFolderHidden.ts","selectors/getBookmarkTree.ts","components/NoResult.tsx","selectors/getCurrentTheme.ts","components/GoogleSearchBox.tsx","components/Clock.tsx","components/Quote.tsx","selectors/getCurrentQuote.ts","components/App.tsx","components/GlobalStyle.tsx","reducers/bookmarksReducer.ts","reducers/sessionReducer.ts","utils/getRandomQuote.ts","reducers/themesReducer.ts","config/themes.ts","reducers/quotesReducer.ts","reducers/index.ts","utils/moveArrayElement.ts","services/chromeService.ts","utils/parseChromeBookmarks.ts","sagas/retrieveBookmarksSaga.ts","sagas/rehydrateSaga.ts","sagas/persistSaga.ts","sagas/moveBookmarkSaga.ts","sagas/index.ts","utils/createReduxStore.ts","index.tsx","hooks/useOnMount.ts"],"names":["delay","ms","Promise","res","setTimeout","defaultOptions","OptionHideShow","memo","props","isHidden","_props$size","size","onClick","otherProps","Object","objectWithoutProperties","react_default","a","createElement","Root","assign","e","preventDefault","StyledHideIcon","StyledShowIcon","scaleIn","keyframes","_templateObject","styled","div","withConfig","displayName","componentId","concat","theme","folderOptionBackground","HideIcon","folderOptionColor","ShowIcon","FolderHeader","_ref","title","onOptionClick","_useHover","options","arguments","length","undefined","_useState","useState","_useState2","slicedToArray","isHovered","setIsHovered","isCurrentlyHovered","useRef","handleMouseOver","current","handleMouseOut","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","this","apply","ref","useEffect","node","addEventListener","removeEventListener","useHover","_useHover2","rootRef","FolderHeader_Root","Title","Options","p","folderColor","setQuery","createAction","resolve","query","actions","toggleShowHiddenBookmarks","retrieveBookmarks","retrieveBookmarksSuccess","foldersById","bookmarksById","moveBookmark","bookmark","oldIndex","newIndex","moveBookmarkSuccess","hideFolder","bookmarkId","showFolder","goToNextTheme","rehydrate","rehydrateSuccess","persistedState","goToNextQuote","useMappedActions","actionsObj","dispatch","useDispatch","mapValues","value","useCallback","IS_LIVE_EXAMPLE","process","REACT_APP_IS_LIVE_EXAMPLE","BookmarkGridItem","SortableElement","url","isHoverDisabled","isTransitionDisabled","faviconSrc","prefixLessUrl","URL","hostname","err","getFaviconUrl","BookmarkGridItem_Root","draggable","href","rel","Content","Favicon","src","BookmarkGridItem_Title","itemBackground","itemBorder","itemShadow","itemHoverBackground","itemHoverShadow","img","span","itemTextColor","itemHoverTextColor","BookmarkGrid","SortableContainer","folder","isDragging","isFolderHidden","BookmarkGrid_Root","bookmarks","listFiltered","sort","item1","item2","forEach","index","push","id","filterBookmark","map","key","ul","FolderList","bookmarkTree","setIsDragging","handleStartDragging","_useMappedActions2","FolderList_Root","FolderItem","FolderHeader_FolderHeader","axis","distance","updateBeforeSortStart","onSortEnd","params","handleStopDragging","li","SearchBar","forwardRef","onChange","Form","StyledSearchIcon","Input","placeholder","type","target","form","SearchIcon","headerColor","input","LogoImage","withTheme","viewBox","xmlSpace","d","fill","checkKeyValidity","ctrlKey","metaKey","shiftKey","mapState","state","session","isShowingHiddenBookmarks","Header","_useMappedState","useMappedState","_useMappedActions","searchBarRef","isKeyDown","setIsKeyDown","shouldDisableKeyDownUpdate","handleKeyDown","onKeyDown","handleKeyUp","onKeyUp","window","document","useKeyboardPress","focus","Header_Root","Logo","StyledHeartIcon","LogoText","Menu","MenuItem","StyledColorLensIcon","fadeInBottom","Header_templateObject","headerBackground","ColorLensIcon","QuoteIcon","HeartIcon","GithubIcon","compareIndexes","b","comparison","indexA","indexB","getIsFolderHidden","folderId","hiddenFolderIds","includes","getBookmarkTree","_state$bookmarks","_state$session","folders","keys","objectSpread","filter","x","isTitleInQuery","toLowerCase","isUrlInQuery","folderIndex","findIndex","parentId","NoResult","NoResult_Root","Message","fadeInTop","NoResult_templateObject","noResultColor","getCurrentTheme","_state$themes","themes","availableThemes","currentThemeId","GoogleSearchBox","action","method","name","className","event","autoComplete","required","Clock","style","display","justifyContent","alignItems","margin","lib_default","background","border","center","seconds","minutes","hour","tick","smallTickWidth","largeTickWidth","secondHandWidth","minuteHandWidth","hourHandWidth","width","GoogleSearchBox_GoogleSearchBox","QuoteComponent","QuoteBox","ClockBox","Clock_Clock","Sentence","quote","fadeIn","Quote_templateObject","getCurrentQuote","_state$quotes","quotes","availableQuotes","currentQuoteId","getQuoteChangedStatus","isQuoteChanged","areBookmarksReady","currentTheme","currentQuote","quoteChangeStatus","App_templateObject","appBackground","Main","main","GlobalStyle","createGlobalStyle","GlobalStyle_templateObject","initialState","isRetrievingBookmarks","getRandomNumber","currentNumber","maxNumber","randomNumber","Math","floor","random","themeJupiter","themeDarkOcean","themeVision","themeSunset","themeMantle","themeMoonlit","rootReducer","combineReducers","produce","draft","getType","payload","indexOf","pull","_action$payload","values","array","fromIndex","toIndex","newArray","toConsumableArray","inc","i","moveArrayElement","console","log","availableThemeIds","currentThemeIndex","nextThemeId","tempNextQuoteId","nextQuoteId","getBookmarks","abrupt","bookmarksFixture","chrome","getTree","_ref2","_callee2","_context2","fixedNewIndex","move","_x","_x2","_x3","parseChromeBookmarks","chromeBookmarks","parseBookmarkNodes","nodes","children","dateGroupModified","unmodifiable","retrieveBookmarksSaga","parsedBookmarks","sent","put","rehydrateSaga","storedReduxState","reduxState","localStorage","getItem","JSON","parse","persistSaga","reduxStateToPersist","select","setItem","stringify","moveBookmarkSaga","rootSaga","all","takeEvery","sagaMiddleware","createLogger","collapsed","duration","createSagaMiddleware","store","middlewares","enhancer","compose","applyMiddleware","createStore","run","createReduxStore","ReactDOM","render","Fragment","index_es","Provider","onMount","isBookmarkTreeEmpty","isEmpty","styled_components_browser_esm","App_Root","Quote_QuoteComponent","text","NoResult_NoResult","getElementById"],"mappings":"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","file":"static/js/main.852e4a9a.chunk.js","sourcesContent":["// tslint:disable-next-line no-string-based-set-timeout\r\nexport const delay = (ms: number) => new Promise(res => setTimeout(res, ms));\r\n","import { useState, useRef, useEffect, RefObject } from \"react\";\r\nimport { delay } from \"../utils/delay\";\r\n\r\ninterface Options {\r\n  delay?: number; // ms after which the hover status is set to false\r\n}\r\n\r\nconst defaultOptions = {\r\n  delay: 20\r\n};\r\n\r\nexport function useHover<T>(\r\n  options: Options = defaultOptions\r\n): [RefObject<T>, boolean] {\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const isCurrentlyHovered = useRef(false);\r\n\r\n  const handleMouseOver = () => {\r\n    isCurrentlyHovered.current = true;\r\n    if (!isHovered) {\r\n      setIsHovered(true);\r\n    }\r\n  };\r\n\r\n  const handleMouseOut = async () => {\r\n    isCurrentlyHovered.current = false;\r\n    await delay(options.delay || 0);\r\n    if (!isCurrentlyHovered.current) {\r\n      setIsHovered(false);\r\n    }\r\n  };\r\n\r\n  const ref = useRef<T>(null);\r\n\r\n  useEffect(() => {\r\n    if (ref && ref.current) {\r\n      const node = ref.current as any;\r\n      node.addEventListener(\"mouseover\", handleMouseOver);\r\n      node.addEventListener(\"mouseout\", handleMouseOut);\r\n    }\r\n\r\n    return () => {\r\n      if (ref && ref.current) {\r\n        const node = ref.current as any;\r\n        node.removeEventListener(\"mouseover\", handleMouseOver);\r\n        node.removeEventListener(\"mouseout\", handleMouseOut);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return [ref, isHovered];\r\n}\r\n","/**\r\n * The hide/show option round button.\r\n */\r\nimport React, { FC, memo, MouseEvent } from \"react\";\r\nimport styled, { keyframes } from \"styled-components/macro\";\r\nimport { Hide as HideIcon } from \"styled-icons/boxicons-regular\";\r\nimport { Show as ShowIcon } from \"styled-icons/boxicons-regular\";\r\nimport { Theme } from \"../types/Theme\";\r\n\r\ninterface Props {\r\n  isHidden: boolean;\r\n  size?: number;\r\n  onClick: () => void;\r\n}\r\n\r\nexport const OptionHideShow: FC<Props> = memo(props => {\r\n  const { isHidden, size = 32, onClick, ...otherProps } = props;\r\n  const handleClick = (e: MouseEvent<HTMLDivElement>) => {\r\n    e.preventDefault();\r\n    onClick();\r\n  };\r\n  return (\r\n    <Root onClick={handleClick} size={size} {...otherProps}>\r\n      {!isHidden && <StyledHideIcon size={size * 0.75} />}\r\n      {isHidden && <StyledShowIcon size={size * 0.75} />}\r\n    </Root>\r\n  );\r\n});\r\n\r\nconst scaleIn = keyframes`\r\n  from {\r\n    transform: scale(0);\r\n  }\r\n  to {\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\nconst Root = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: ${(props: { size: number }) => `${props.size}px`};\r\n  height: ${(props: { size: number }) => `${props.size}px`};\r\n  border-radius: ${(props: { size: number }) => `${props.size / 2}px`};\r\n  animation: ${scaleIn} 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;\r\n  animation-delay: 140ms;\r\n  transition: background-color 100ms;\r\n  background: ${(props: { theme: Theme }) =>\r\n    props.theme.folderOptionBackground};\r\n  opacity: 1;\r\n\r\n  &:hover {\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n\r\nconst StyledHideIcon = styled(HideIcon)`\r\n  color: ${(props: { theme: Theme }) => props.theme.folderOptionColor};\r\n`;\r\n\r\nconst StyledShowIcon = styled(ShowIcon)`\r\n  color: ${(props: { theme: Theme }) => props.theme.folderOptionColor};\r\n`;\r\n","/**\r\n * The folder header, where there are the folder title and its show/hide option.\r\n */\r\nimport React, { FC } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useHover } from \"../hooks/useHover\";\r\nimport { OptionHideShow } from \"./OptionHideShow\";\r\nimport { Theme } from \"../types/Theme\";\r\n\r\ninterface Props {\r\n  title: string;\r\n  isHidden: boolean;\r\n  onOptionClick: () => void;\r\n}\r\n\r\nexport const FolderHeader: FC<Props> = ({ title, isHidden, onOptionClick }) => {\r\n  const [rootRef, isHovered] = useHover<HTMLParagraphElement>();\r\n\r\n  return (\r\n    <Root ref={rootRef}>\r\n      <Title>{title}</Title>\r\n      {isHovered && (\r\n        <Options>\r\n          <OptionHideShow\r\n            size={24}\r\n            isHidden={isHidden}\r\n            onClick={onOptionClick}\r\n          />\r\n        </Options>\r\n      )}\r\n    </Root>\r\n  );\r\n};\r\n\r\nconst Root = styled.div`\r\n  display: inline-flex;\r\n  cursor: pointer;\r\n  align-items: center;\r\n  margin-left: 10px; /* TODO: react-sortable-hoc grid workaround */\r\n`;\r\n\r\nconst Title = styled.p`\r\n  color: ${(props: { theme: Theme }) => props.theme.folderColor};\r\n  font-size: 19px;\r\n  font-weight: 500;\r\n  display: inline-block;\r\n`;\r\n\r\nconst Options = styled.div`\r\n  margin-left: 6px;\r\n`;\r\n","import { createAction } from \"typesafe-actions\";\r\nimport { Bookmark } from \"./../types/Bookmark\";\r\nimport { ChromeBookmark } from \"./../types/ChromeBookmark\";\r\nimport { ReduxPersistedState } from \"./../types/ReduxPersistedState\";\r\n\r\n// Session actions\r\nconst setQuery = createAction(\"session/SET_QUERY\", resolve => {\r\n  return (query: string) => resolve(query);\r\n});\r\n\r\nconst toggleShowHiddenBookmarks = createAction(\r\n  \"session/TOGGLE_SHOW_HIDDEN_BOOKMARKS\",\r\n  resolve => {\r\n    return () => resolve();\r\n  }\r\n);\r\n\r\n// Bookmark actions\r\nconst retrieveBookmarks = createAction(\r\n  \"bookmark/RETRIEVE_BOOKMARK\",\r\n  resolve => {\r\n    return () => resolve();\r\n  }\r\n);\r\n\r\nconst retrieveBookmarksSuccess = createAction(\r\n  \"bookmark/RETRIEVE_BOOKMARK_SUCCESS\",\r\n  resolve => {\r\n    return (\r\n      foldersById: { [id: string]: ChromeBookmark },\r\n      bookmarksById: { [id: string]: ChromeBookmark }\r\n    ) => resolve({ foldersById, bookmarksById });\r\n  }\r\n);\r\n\r\nconst moveBookmark = createAction(\"bookmark/MOVE_BOOKMARK\", resolve => {\r\n  return (bookmark: Bookmark, oldIndex: number, newIndex: number) =>\r\n    resolve({ bookmark, oldIndex, newIndex });\r\n});\r\n\r\nconst moveBookmarkSuccess = createAction(\r\n  \"bookmark/MOVE_BOOKMARK_SUCCESS\",\r\n  resolve => {\r\n    return () => resolve();\r\n  }\r\n);\r\n\r\nconst hideFolder = createAction(\"bookmarks/HIDE_FOLDER\", resolve => {\r\n  return (bookmarkId: string) => resolve(bookmarkId);\r\n});\r\n\r\nconst showFolder = createAction(\"bookmarks/SHOW_FOLDER\", resolve => {\r\n  return (bookmarkId: string) => resolve(bookmarkId);\r\n});\r\n\r\n// Theme actions\r\nconst goToNextTheme = createAction(\"theme/GO_TO_NEXT_THEME\", resolve => {\r\n  return () => resolve();\r\n});\r\n\r\n// Rehydration actions\r\nconst rehydrate = createAction(\"other/REHYDRATE_REQUEST\", resolve => {\r\n  return () => resolve();\r\n});\r\nconst rehydrateSuccess = createAction(\"other/REHYDRATE_SUCCESS\", resolve => {\r\n  return (persistedState: ReduxPersistedState) => resolve(persistedState);\r\n});\r\n\r\n// Theme actions\r\nconst goToNextQuote = createAction(\"quote/GO_TO_NEXT_QUOTE\", resolve => {\r\n  return () => resolve();\r\n});\r\n\r\nexport const actions = {\r\n  toggleShowHiddenBookmarks,\r\n  setQuery,\r\n  retrieveBookmarks,\r\n  retrieveBookmarksSuccess,\r\n  moveBookmark,\r\n  moveBookmarkSuccess,\r\n  hideFolder,\r\n  showFolder,\r\n  goToNextTheme,\r\n  rehydrate,\r\n  rehydrateSuccess,\r\n  goToNextQuote\r\n};\r\n","import { useCallback } from \"react\";\r\nimport { mapValues } from \"lodash\";\r\nimport { useDispatch } from \"redux-react-hook\";\r\n\r\nexport function useMappedActions<T>(actionsObj: T): T {\r\n  const dispatch = useDispatch();\r\n  // @ts-ignore\r\n  return mapValues(actionsObj, value => {\r\n    // @ts-ignore\r\n    return useCallback((...args) => dispatch(value(...args)), []);\r\n  });\r\n}\r\n","export const NODE_ENV = process.env.NODE_ENV;\r\nexport const IS_LIVE_EXAMPLE = process.env.REACT_APP_IS_LIVE_EXAMPLE;\r\n","/**\r\n * A single bookmark item of the bookmark grid.\r\n * Wrapped in SortableElement from react-sortable-hoc to make it sortable (in\r\n * the grid).\r\n * Since SortableElement doesn't work well with some CSS properties,\r\n * (specifically, hover and transition), we toggle them if the user is dragging\r\n * an item across the grid.\r\n */\r\nimport React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { SortableElement } from \"react-sortable-hoc\";\r\nimport { getFaviconUrl } from \"../utils/getFaviconUrl\";\r\nimport { Theme } from \"../types/Theme\";\r\n\r\ninterface Props {\r\n  id: string;\r\n  title: string;\r\n  url?: string;\r\n  isHidden: boolean;\r\n  isHoverDisabled?: boolean;\r\n  isTransitionDisabled?: boolean;\r\n}\r\n\r\nexport const BookmarkGridItem = SortableElement<Props>(\r\n  ({ title, url, isHidden, isHoverDisabled, isTransitionDisabled }) => {\r\n    const faviconSrc = url && getFaviconUrl(url);\r\n\r\n    return (\r\n      <Root\r\n        draggable={false} // Disables the browser built-in drag handler\r\n        href={url}\r\n        rel=\"noopener noreferrer\"\r\n        isHoverDisabled={isHoverDisabled}\r\n        isTransitionDisabled={isTransitionDisabled}\r\n      >\r\n        <Content isHidden={isHidden}>\r\n          {url && <Favicon src={faviconSrc} />}\r\n          <Title>{title}</Title>\r\n        </Content>\r\n      </Root>\r\n    );\r\n  }\r\n);\r\n\r\ninterface RootProps {\r\n  theme: Theme;\r\n  isHoverDisabled?: boolean;\r\n  isTransitionDisabled?: boolean;\r\n}\r\nconst Root = styled.a`\r\n  display: flex;\r\n  flex-direction: row;\r\n  text-align: left;\r\n  margin: 6px 10px; /* TODO: react-sortable-hoc grid workaround */\r\n  height: 54px; /* TODO: react-sortable-hoc grid workaround */\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  width: 260px;\r\n  background: ${(props: RootProps) => props.theme.itemBackground};\r\n  border: ${(props: RootProps) => props.theme.itemBorder};\r\n  box-shadow: ${(props: RootProps) => props.theme.itemShadow};\r\n  border-radius: 4px;\r\n  cursor: ${(props: RootProps) =>\r\n    props.isHoverDisabled ? \"initial\" : \"pointer\"};\r\n  text-decoration: none;\r\n  box-sizing: border-box;\r\n  /* \r\n  We need to set transition to \"initial\" here while dragging elements, otherwise\r\n  the built-in react-sortable-hoc transition won't work: \r\n  See: https://github.com/clauderic/react-sortable-hoc/issues/334 \r\n  */\r\n  transition: ${(props: RootProps) =>\r\n    props.isTransitionDisabled\r\n      ? \"initial\"\r\n      : \"background 0.2s ease-out, box-shadow 0.2s ease-out\"};\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background: ${(props: RootProps) =>\r\n      props.isHoverDisabled\r\n        ? props.theme.itemBackground\r\n        : props.theme.itemHoverBackground};\r\n    box-shadow: ${(props: RootProps) =>\r\n      props.isHoverDisabled\r\n        ? props.theme.itemShadow\r\n        : props.theme.itemHoverShadow};\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 4px 12px;\r\n  opacity: ${(props: { isHidden: boolean }) => (props.isHidden ? \"0.4\" : \"1\")};\r\n`;\r\n\r\nconst Favicon = styled.img`\r\n  height: 24px;\r\n  width: 24px;\r\n  min-width: 24px;\r\n  margin-right: 12px;\r\n`;\r\n\r\nconst Title = styled.span`\r\n  user-select: none;\r\n  letter-spacing: 0px;\r\n  font-weight: 500;\r\n  color: ${(props: { theme: Theme }) => props.theme.itemTextColor};\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  word-break: break-word;\r\n  display: -webkit-box;\r\n  -webkit-box-orient: vertical;\r\n  -webkit-line-clamp: 2;\r\n\r\n  ${Root}:hover & {\r\n    color: ${(props: { theme: Theme }) => props.theme.itemHoverTextColor};\r\n  }\r\n\r\n  ${Root}:focus & {\r\n    color: ${(props: { theme: Theme }) => props.theme.itemHoverTextColor};\r\n  }\r\n`;\r\n","import { IS_LIVE_EXAMPLE } from \"./../config/constants\";\r\nimport { NODE_ENV } from \"../config/constants\";\r\n\r\nexport const getFaviconUrl = (url: string) => {\r\n  try {\r\n    if (NODE_ENV === \"development\" || IS_LIVE_EXAMPLE) {\r\n      const prefixLessUrl = new URL(url || \"\").hostname;\r\n      return `https://api.faviconkit.com/${prefixLessUrl}/32`;\r\n    } else {\r\n      return `chrome://favicon/size/16@2x/${url}`;\r\n    }\r\n  } catch (err) {\r\n    return \"\";\r\n  }\r\n};\r\n","/**\r\n * Grid of bookmarks (of a specific folder).\r\n * Wrapped in SortableContainer from react-sortable-hoc to allow the\r\n * re-ordering of its childrens.\r\n */\r\nimport React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { SortableContainer } from \"react-sortable-hoc\";\r\nimport { BookmarkGridItem } from \"./BookmarkGridItem\";\r\nimport { Folder } from \"../types/Folder\";\r\nimport { Bookmark } from \"../types/Bookmark\";\r\n\r\ninterface Props {\r\n  folder: Folder;\r\n  isDragging: boolean;\r\n  isFolderHidden: boolean;\r\n}\r\n\r\n// TODO: OPtimise the algorithm\r\nconst filterBookmark = (bookmarks: Bookmark[]): Bookmark[] => {\r\n  const listFiltered: Bookmark[] = [];\r\n  bookmarks = bookmarks.sort((item1, item2) => {\r\n    if (item1.title === item2.title) {\r\n      return 0;\r\n    } else if (item1.title > item2.title) {\r\n      return 1;\r\n    }\r\n    return -1;\r\n  });\r\n  bookmarks.forEach((bookmark, index) => {\r\n    if (index === bookmarks.length - 1) {\r\n      listFiltered.push(bookmark);\r\n      return;\r\n    }\r\n    if (\r\n      bookmark.title === \"\" ||\r\n      bookmark.title !== bookmarks[index + 1].title\r\n    ) {\r\n      listFiltered.push(bookmark);\r\n    }\r\n  });\r\n  return listFiltered.sort((item1, item2) => {\r\n    if (item1.id === item2.id) {\r\n      return 0;\r\n    } else if (item1.id > item2.id) {\r\n      return 1;\r\n    }\r\n    return -1;\r\n  });\r\n};\r\n\r\nexport const BookmarkGrid = SortableContainer<Props>(\r\n  ({ folder, isDragging, isFolderHidden }) => {\r\n    return (\r\n      <Root>\r\n        {filterBookmark(folder.bookmarks).map((bookmark, index) => (\r\n          <BookmarkGridItem\r\n            key={bookmark.id}\r\n            id={bookmark.id}\r\n            index={index}\r\n            title={bookmark.title}\r\n            url={bookmark.url}\r\n            isHoverDisabled={isDragging}\r\n            isTransitionDisabled={isDragging}\r\n            isHidden={isFolderHidden}\r\n          />\r\n        ))}\r\n      </Root>\r\n    );\r\n  }\r\n);\r\n\r\nconst Root = styled.ul`\r\n  display: grid;\r\n  /* grid-gap: 12px 20px; TODO: react-sortable-hoc grid workaround */\r\n  grid-template-columns: repeat(auto-fit, 280px);\r\n  /* grid-auto-rows: 54px; TODO: react-sortable-hoc grid workaround */\r\n  padding-left: 0;\r\n`;\r\n","/**\r\n * The list of bookmark folders. Handle the interactions between the folder\r\n * show/hide option and Redux.\r\n */\r\nimport React, { FC, memo, useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { FolderHeader } from \"./FolderHeader\";\r\nimport { BookmarkTree } from \"../types/BookmarkTree\";\r\nimport { Folder } from \"../types/Folder\";\r\nimport { actions } from \"../actions\";\r\nimport { useMappedActions } from \"../hooks/useMappedActions\";\r\nimport { BookmarkGrid } from \"./BookmarkGrid\";\r\n\r\ninterface Props {\r\n  bookmarkTree: BookmarkTree;\r\n}\r\n\r\nexport const FolderList: FC<Props> = memo(({ bookmarkTree }) => {\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const { moveBookmark } = useMappedActions(actions);\r\n  const handleStartDragging = () => {\r\n    setIsDragging(true);\r\n  };\r\n  const handleStopDragging = (\r\n    folder: Folder,\r\n    params: {\r\n      oldIndex: number;\r\n      newIndex: number;\r\n    }\r\n  ) => {\r\n    const bookmark = folder.bookmarks[params.oldIndex];\r\n    moveBookmark(bookmark, params.oldIndex, params.newIndex);\r\n    setIsDragging(false);\r\n  };\r\n  const { hideFolder, showFolder } = useMappedActions(actions);\r\n  return (\r\n    <Root>\r\n      {bookmarkTree.map(folder => {\r\n        const handleOptionClick = () => {\r\n          if (folder.isHidden) {\r\n            showFolder(folder.id);\r\n          } else {\r\n            hideFolder(folder.id);\r\n          }\r\n        };\r\n        return (\r\n          <FolderItem key={folder.id}>\r\n            <FolderHeader\r\n              title={folder.title}\r\n              isHidden={folder.isHidden}\r\n              onOptionClick={handleOptionClick}\r\n            />\r\n            <BookmarkGrid\r\n              folder={folder}\r\n              isFolderHidden={folder.isHidden}\r\n              isDragging={isDragging}\r\n              axis=\"xy\"\r\n              distance={8}\r\n              updateBeforeSortStart={handleStartDragging}\r\n              onSortEnd={params => handleStopDragging(folder, params)}\r\n            />\r\n          </FolderItem>\r\n        );\r\n      })}\r\n    </Root>\r\n  );\r\n});\r\n\r\nconst Root = styled.ul`\r\n  display: block;\r\n  text-align: left;\r\n  padding-left: 0;\r\n  width: 100%;\r\n  max-width: 860px;\r\n`;\r\n\r\nconst FolderItem = styled.li`\r\n  list-style: none;\r\n  padding-left: 0px;\r\n  margin-top: 30px;\r\n  margin-bottom: 10px;\r\n`;\r\n","/**\r\n * Searchbar that resides inside the app header.\r\n */\r\nimport React, { ChangeEvent, forwardRef } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Search as SearchIcon } from \"styled-icons/material\";\r\nimport { Theme } from \"../types/Theme\";\r\n\r\ninterface Props {\r\n  query: string;\r\n  onChange: (query: string) => void;\r\n}\r\n\r\nexport const SearchBar = forwardRef<HTMLInputElement, Props>((props, ref) => {\r\n  const { query, onChange } = props;\r\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange(e.target.value);\r\n  };\r\n  return (\r\n    <Form>\r\n      <StyledSearchIcon />\r\n      <Input\r\n        ref={ref}\r\n        placeholder=\"Search bookmarks...\"\r\n        type=\"text\"\r\n        onChange={handleInputChange}\r\n        value={query}\r\n      />\r\n    </Form>\r\n  );\r\n});\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  width: 190px;\r\n  height: 32px;\r\n`;\r\n\r\nconst StyledSearchIcon = styled(SearchIcon)`\r\n  color: ${(props: { theme: Theme }) => props.theme.headerColor};\r\n  width: 28px;\r\n  height: 28px;\r\n  margin-right: 6px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  height: 100%;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  transition: all 0.6s ease-out;\r\n  color: ${(props: { theme: Theme }) => props.theme.headerColor};\r\n  background-color: transparent;\r\n  border: none;\r\n  outline: 0;\r\n\r\n  &:hover:focus {\r\n    outline: 0;\r\n    border: none;\r\n  }\r\n\r\n  &:focus {\r\n    border: none;\r\n    border-bottom: 1px solid white;\r\n    border-bottom-color: ${(props: { theme: Theme }) =>\r\n      props.theme.headerColor};\r\n  }\r\n\r\n  &:hover::placeholder {\r\n  }\r\n\r\n  &::placeholder {\r\n    color: ${(props: { theme: Theme }) => props.theme.headerColor};\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n","/**\r\n * Just the SVG logo.\r\n * Putting it inside a component allows us to easily change its fill color\r\n * trough props.\r\n */\r\nimport React, { FC } from \"react\";\r\nimport { withTheme } from \"styled-components\";\r\nimport { Theme } from \"../types/Theme\";\r\n\r\ninterface Props {\r\n  theme: Theme;\r\n}\r\n\r\nexport const LogoImage: FC<Props> = withTheme((props: Props) => {\r\n  const { theme, ...otherProps } = props;\r\n  return (\r\n    <svg viewBox=\"0 0 56 56\" xmlSpace=\"preserve\" {...otherProps}>\r\n      <g>\r\n        <path\r\n          d=\"M0,14.5v39h56v-39H0z M54,51.5H2v-35h52V51.5z\"\r\n          fill={theme.headerColor}\r\n        />\r\n        <path\r\n          d=\"M3,12.5h50c0.552,0,1-0.448,1-1s-0.448-1-1-1H3c-0.552,0-1,0.448-1,1S2.448,12.5,3,12.5z\"\r\n          fill={theme.headerColor}\r\n        />\r\n        <path\r\n          d=\"M6,8.5h44c0.552,0,1-0.448,1-1s-0.448-1-1-1H6c-0.552,0-1,0.448-1,1S5.448,8.5,6,8.5z\"\r\n          fill={theme.headerColor}\r\n        />\r\n        <path\r\n          d=\"M9,4.5h38c0.552,0,1-0.448,1-1s-0.448-1-1-1H9c-0.552,0-1,0.448-1,1S8.448,4.5,9,4.5z\"\r\n          fill={theme.headerColor}\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n});\r\n","import { useState, useEffect, useRef } from \"react\";\r\n\r\ninterface Parameters {\r\n  key: string;\r\n  ctrlKey?: boolean;\r\n  shiftKey?: boolean;\r\n  metaKey?: boolean;\r\n  onKeyDown?: (e: KeyboardEvent) => void;\r\n  onKeyUp?: (e: KeyboardEvent) => void;\r\n}\r\n\r\nconst checkKeyValidity = (e: KeyboardEvent, params: Parameters) => {\r\n  return (\r\n    e.key === params.key &&\r\n    e.ctrlKey === !!params.ctrlKey &&\r\n    e.metaKey === !!params.metaKey &&\r\n    e.shiftKey === !!params.shiftKey\r\n  );\r\n};\r\n\r\nexport function useKeyboardPress(params: Parameters) {\r\n  const [isKeyDown, setIsKeyDown] = useState(false);\r\n  const shouldDisableKeyDownUpdate = useRef(false);\r\n\r\n  const handleKeyDown = (e: KeyboardEvent) => {\r\n    const isKeyValid = checkKeyValidity(e, params);\r\n    if (isKeyValid) {\r\n      if (params.onKeyDown) {\r\n        params.onKeyDown(e);\r\n      }\r\n      if (!shouldDisableKeyDownUpdate.current) {\r\n        shouldDisableKeyDownUpdate.current = true;\r\n        setIsKeyDown(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleKeyUp = (e: KeyboardEvent) => {\r\n    shouldDisableKeyDownUpdate.current = false;\r\n    if (params.onKeyUp) {\r\n      params.onKeyUp(e);\r\n    }\r\n    setIsKeyDown(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.document.addEventListener(\"keydown\", handleKeyDown);\r\n    window.document.addEventListener(\"keyup\", handleKeyUp);\r\n    return () => {\r\n      window.document.removeEventListener(\"keydown\", handleKeyDown);\r\n      window.document.removeEventListener(\"keyup\", handleKeyUp);\r\n    };\r\n  }, []);\r\n\r\n  return isKeyDown;\r\n}\r\n","/**\r\n * The app header (with logo, searchbar and a few links).\r\n */\r\nimport React, { FC, memo, MouseEvent, useRef } from \"react\";\r\nimport styled, { keyframes } from \"styled-components/macro\";\r\nimport { actions } from \"../actions\";\r\nimport { ReduxState } from \"../types/ReduxState\";\r\nimport { useMappedActions } from \"../hooks/useMappedActions\";\r\nimport { useMappedState } from \"redux-react-hook\";\r\nimport { SearchBar } from \"./SearchBar\";\r\nimport { LogoImage } from \"./LogoImage\";\r\nimport { MarkGithub as GithubIcon } from \"styled-icons/octicons\";\r\nimport {\r\n  Hide as HideIcon,\r\n  Show as ShowIcon\r\n} from \"styled-icons/boxicons-regular\";\r\nimport { ColorLens as ColorLensIcon } from \"styled-icons/material\";\r\nimport { Heart as HeartIcon } from \"styled-icons/boxicons-regular/Heart\"\r\nimport { QuoteRight as QuoteIcon } from \"styled-icons/boxicons-solid/QuoteRight\";\r\nimport { useKeyboardPress } from \"../hooks/useKeyboardPress\";\r\nimport { Theme } from \"../types/Theme\";\r\n\r\nconst mapState = (state: ReduxState) => ({\r\n  query: state.session.query,\r\n  isShowingHiddenBookmarks: state.session.isShowingHiddenBookmarks\r\n});\r\n\r\nexport const Header: FC = memo(props => {\r\n  const { isShowingHiddenBookmarks, query } = useMappedState(mapState);\r\n  const {\r\n    toggleShowHiddenBookmarks,\r\n    setQuery,\r\n    goToNextTheme,\r\n    goToNextQuote\r\n  } = useMappedActions(actions);\r\n  const searchBarRef = useRef<HTMLInputElement>(null);\r\n\r\n  // Overrides CMD+F default behavio1ur\r\n  useKeyboardPress({\r\n    key: \"f\",\r\n    metaKey: true,\r\n    onKeyDown: e => {\r\n      e.preventDefault();\r\n      searchBarRef.current && searchBarRef.current.focus();\r\n    }\r\n  });\r\n\r\n  const handleBookmarksVisibilityClick = (e: MouseEvent<HTMLAnchorElement>) => {\r\n    e.preventDefault();\r\n    toggleShowHiddenBookmarks();\r\n  };\r\n\r\n  const handleThemeSwitchClick = (e: MouseEvent<HTMLAnchorElement>) => {\r\n    e.preventDefault();\r\n    goToNextTheme();\r\n  };\r\n\r\n  const handleQuoteSwitchClick = (e: MouseEvent<HTMLAnchorElement>) => {\r\n    e.preventDefault();\r\n    goToNextQuote();\r\n  };\r\n\r\n  return (\r\n    <Root>\r\n      <Logo>\r\n        <StyledHeartIcon />\r\n        <LogoText>Quang's Tab</LogoText>\r\n      </Logo>\r\n      <SearchBar ref={searchBarRef} query={query} onChange={setQuery} />\r\n      <Menu>\r\n        <MenuItem onClick={handleThemeSwitchClick}>\r\n          <StyledColorLensIcon />\r\n        </MenuItem>\r\n      </Menu>\r\n    </Root>\r\n  );\r\n});\r\n\r\nconst fadeInBottom = keyframes`\r\n  from { \r\n    transform: translateY(-40px); \r\n    opacity: 0;\r\n  }\r\n  to { \r\n    transform: translateY(0); \r\n    opacity: 1; \r\n  }\r\n`;\r\n\r\nconst Root = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 8px 40px;\r\n  height: 28px;\r\n  background: ${(props: { theme: Theme }) => props.theme.headerBackground};\r\n  animation: ${fadeInBottom} 0.1s ease-in-out both;\r\n  animation-delay: 0.1s;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  display: flex;\r\n  height: 28px;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledLogoImage = styled(LogoImage)`\r\n  width: 28px;\r\n  height: 28px;\r\n`;\r\n\r\nconst LogoText = styled.p`\r\n  color: ${(props: { theme: Theme }) => props.theme.headerColor};\r\n  font-size: 17px;\r\n  font-weight: 600;\r\n  margin-left: 16px;\r\n`;\r\n\r\nconst Menu = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst MenuItem = styled.a`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n\r\n  &:hover {\r\n    opacity: 0.7;\r\n  }\r\n`;\r\n\r\nconst Separator = styled.span`\r\n  background: ${(props: { theme: Theme }) => props.theme.headerColor};\r\n  margin: 0px 16px;\r\n  height: 18px;\r\n  width: 1px;\r\n`;\r\n\r\nconst StyledHideIcon = styled(HideIcon)`\r\n  color: ${(props: { theme: Theme }) => props.theme.headerColor};\r\n  height: 22px;\r\n  width: 22px;\r\n  margin-right: 4px;\r\n`;\r\n\r\nconst StyledColorLensIcon = styled(ColorLensIcon)`\r\n  color: ${(props: { theme: Theme }) => props.theme.headerColor};\r\n  height: 22px;\r\n  width: 22px;\r\n  margin-right: 4px;\r\n`;\r\n\r\nconst StyledQuoteIcon = styled(QuoteIcon)`\r\n  color: ${(props: { theme: Theme }) => props.theme.headerColor};\r\n  height: 22px;\r\n  width: 22px;\r\n  margin-right: 4px;\r\n`;\r\n\r\nconst StyledHeartIcon = styled(HeartIcon)`\r\n  color: ${(props: { theme: Theme }) => props.theme.headerColor};\r\n  height: 22px;\r\n  width: 22px;\r\n  margin-right: 4px;\r\n`;\r\n\r\nconst StyledShowIcon = styled(ShowIcon)`\r\n  color: ${(props: { theme: Theme }) => props.theme.headerColor};\r\n  height: 22px;\r\n  width: 22px;\r\n  margin-right: 4px;\r\n`;\r\n\r\nconst StyledGithubIcon = styled(GithubIcon)`\r\n  color: ${(props: { theme: Theme }) => props.theme.headerColor};\r\n  height: 22px;\r\n  width: 22px;\r\n`;\r\n","export const compareIndexes = (\r\n  a: { index?: number },\r\n  b: { index?: number }\r\n) => {\r\n  let comparison = 0;\r\n  const indexA = a.index || 0;\r\n  const indexB = b.index || 0;\r\n  if (indexA > indexB) {\r\n    comparison = 1;\r\n  } else if (indexA < indexB) {\r\n    comparison = -1;\r\n  }\r\n  return comparison;\r\n};\r\n","import { ReduxState } from \"../types/ReduxState\";\r\n\r\nexport const getIsFolderHidden = (state: ReduxState, folderId: string) => {\r\n  const { hiddenFolderIds } = state.bookmarks;\r\n  const isFolderHidden = hiddenFolderIds.includes(folderId);\r\n  return isFolderHidden;\r\n};\r\n","import { compareIndexes } from \"./../utils/compareIndexes\";\r\nimport { BookmarkTree } from \"./../types/BookmarkTree\";\r\nimport { ReduxState } from \"../types/ReduxState\";\r\nimport { getIsFolderHidden } from \"./getIsFolderHidden\";\r\n\r\n// Given the Redux state returns a \"BookmarkTree\" object with data that can\r\n// be easily represented using React components.\r\nexport const getBookmarkTree = (state: ReduxState): BookmarkTree => {\r\n  const { foldersById, bookmarksById } = state.bookmarks;\r\n  const { query, isShowingHiddenBookmarks } = state.session;\r\n  // Get an array of bookmark folders (sorted like in the Chrome bookmarks)\r\n  const folders: BookmarkTree = Object.keys(foldersById)\r\n    .map(folderId => ({\r\n      ...foldersById[folderId],\r\n      isHidden: getIsFolderHidden(state, folderId),\r\n      bookmarks: []\r\n    }))\r\n    .filter(x => isShowingHiddenBookmarks || !x.isHidden)\r\n    .sort(compareIndexes);\r\n  // Populate the folders with their bookmarks\r\n  Object.keys(bookmarksById).forEach(bookmarkId => {\r\n    const bookmark = bookmarksById[bookmarkId];\r\n    const isTitleInQuery = bookmark.title\r\n      .toLowerCase()\r\n      .includes(query.toLowerCase());\r\n    const isUrlInQuery = (bookmark.url || \"\")\r\n      .toLowerCase()\r\n      .includes(query.toLowerCase());\r\n    const isVisible = isTitleInQuery || isUrlInQuery;\r\n    if (isVisible) {\r\n      const folderIndex = folders.findIndex(\r\n        folder => folder.id === bookmark.parentId\r\n      );\r\n      if (folderIndex > -1) {\r\n        if (folders[folderIndex].bookmarks) {\r\n          folders[folderIndex].bookmarks.push(bookmark);\r\n        } else {\r\n          folders[folderIndex].bookmarks = [bookmark];\r\n        }\r\n      }\r\n    }\r\n  });\r\n  // Remove the empty folders\r\n  const bookmarkTree = folders.filter(folder => {\r\n    return folder.bookmarks && folder.bookmarks.length > 0;\r\n  });\r\n  // Sort the folders bookmarks (like in the Chrome bookmarks)\r\n  bookmarkTree.forEach(folder => {\r\n    folder.bookmarks.sort(compareIndexes);\r\n  });\r\n  return bookmarkTree;\r\n};\r\n","/**\r\n * Screen shown to the user when the are not bookmarks in the list (most of the\r\n * time it happens if no bookmarks are available in the search result).\r\n */\r\nimport React, { FC } from \"react\";\r\nimport styled, { keyframes } from \"styled-components/macro\";\r\nimport { Theme } from \"../types/Theme\";\r\n\r\nexport const NoResult: FC = () => {\r\n  return (\r\n    <Root>\r\n      <Message>No result</Message>\r\n    </Root>\r\n  );\r\n};\r\n\r\nconst fadeInTop = keyframes`\r\n  from { \r\n    transform: translateY(20px); \r\n    opacity: 0;\r\n  }\r\n  to { \r\n    transform: translateY(0); \r\n    opacity: 1; \r\n  }\r\n`;\r\n\r\nconst Root = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst Message = styled.p`\r\n  color: ${(props: { theme: Theme }) => props.theme.noResultColor};\r\n  font-size: x-large;\r\n  font-weight: 500;\r\n  animation: ${fadeInTop} 0.4s ease-in-out both;\r\n`;\r\n","import { ReduxState } from \"../types/ReduxState\";\r\n\r\nexport const getCurrentTheme = (state: ReduxState) => {\r\n  const { availableThemes, currentThemeId } = state.themes;\r\n  return availableThemes[currentThemeId];\r\n};\r\n","/**\r\n * Screen shown to the user when the are not bookmarks in the list (most of the\r\n * time it happens if no bookmarks are available in the search result).\r\n */\r\nimport React from \"react\";\r\nimport \"../styles/google-search.css\";\r\n\r\nexport const GoogleSearchBox = (): JSX.Element => {\r\n    return (\r\n        <form id=\"form-search\" action=\"https://www.google.com/search\" method=\"get\" name=\"searchform\">\r\n            <div className=\"div-search\">\r\n                <img id=\"img-search\" src=\"./search.svg\" onClick={(event) => { event.preventDefault() }} />\r\n                <input\r\n                    autoComplete=\"off\"\r\n                    className=\"input-search\"\r\n                    name=\"q\"\r\n                    placeholder=\"Type and enter to search...\"\r\n                    required type=\"text\"\r\n                    onClick={(event) => { event.preventDefault() }}\r\n                />\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n","import React, { FC } from \"react\";\r\nimport moment from \"moment\";\r\nimport AnalogClock, { Themes } from 'react-analog-clock';\r\nimport { GoogleSearchBox } from \"./GoogleSearchBox\";\r\n\r\nexport const Clock = () => {\r\n    const customTheme = {\r\n        background: 'transparent',\r\n        border: '#eee',\r\n        center: '#000',\r\n        seconds: '#f56c6c',\r\n        minutes: '#ccc',\r\n        hour: '#eee',\r\n        tick: '#eee',\r\n        smallTickWidth: 2,\r\n        largeTickWidth: 4,\r\n        secondHandWidth: 3,\r\n        minuteHandWidth: 6,\r\n        hourHandWidth: 8,\r\n    };\r\n    return (\r\n        <div id=\"clock\">\r\n            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", margin: \"3rem 10rem\" }}>\r\n                <AnalogClock theme={customTheme} width={200} />\r\n                <GoogleSearchBox />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","/**\r\n * Screen shown to the user when the are not bookmarks in the list (most of the\r\n * time it happens if no bookmarks are available in the search result).\r\n */\r\nimport React from \"react\";\r\nimport styled, { keyframes } from \"styled-components/macro\";\r\nimport { Clock } from \"./Clock\";\r\nimport { useMappedActions } from \"../hooks/useMappedActions\";\r\nimport { actions } from \"../actions\";\r\n\r\nexport const QuoteComponent = (props: { quote: string, isQuoteChanged: boolean }) => {\r\n  const {\r\n    goToNextQuote\r\n  } = useMappedActions(actions);\r\n  return (\r\n    <QuoteBox>\r\n      <ClockBox>\r\n        <Clock />\r\n      </ClockBox>\r\n      <Sentence onClick={(event) => {\r\n        event.preventDefault();\r\n        goToNextQuote();\r\n      }}>{props.quote}</Sentence>\r\n    </QuoteBox>\r\n  )\r\n};\r\n\r\nconst fadeIn = keyframes`\r\n  from { opacity: 0;}\r\n  to { opacity: 1; }\r\n`;\r\n\r\nconst QuoteBox = styled.div`\r\n  animation: ${fadeIn} 0.5s ease-in-out both;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 2rem;\r\n`;\r\n\r\nconst Sentence = styled.div`\r\n  margin-top: 2rem;\r\n  color: #fff;\r\n  font-size: 2rem;\r\n  padding: 1.5rem 2rem;\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n  border-radius: 10px;\r\n  box-sizing: border-box;\r\n  transition: background-color .3s ease-in;\r\n  :hover {\r\n    background-color: rgba(255, 255, 255, 0.8);\r\n    color: #006283;\r\n    transition: background-color .3s linear;\r\n  }\r\n`;\r\n\r\nconst ClockBox = styled.div`\r\n  min-width: 100%;\r\n  color: white;\r\n  border-bottom: 1.5px solid white;\r\n`;\r\n","import { ReduxState } from \"../types/ReduxState\";\r\n\r\nexport const getCurrentQuote = (state: ReduxState) => {\r\n    const { availableQuotes, currentQuoteId } = state.quotes;\r\n    return availableQuotes[currentQuoteId];\r\n};\r\n\r\nexport const getQuoteChangedStatus = (state: ReduxState) => {\r\n    return state.quotes.isQuoteChanged;\r\n};","/**\r\n * App entry point\r\n */\r\nimport React, { FC } from \"react\";\r\nimport styled, { keyframes, ThemeProvider } from \"styled-components/macro\";\r\nimport { isEmpty } from \"lodash\";\r\nimport { FolderList } from \"./FolderList\";\r\nimport { useOnMount } from \"../hooks/useOnMount\";\r\nimport { actions } from \"../actions\";\r\nimport { Header } from \"./Header\";\r\nimport { ReduxState } from \"../types/ReduxState\";\r\nimport { useMappedState } from \"redux-react-hook\";\r\nimport { useMappedActions } from \"../hooks/useMappedActions\";\r\nimport { getBookmarkTree } from \"../selectors/getBookmarkTree\";\r\nimport { NoResult } from \"./NoResult\";\r\nimport { Theme } from \"../types/Theme\";\r\nimport { getCurrentTheme } from \"../selectors/getCurrentTheme\";\r\nimport { QuoteComponent } from \"./Quote\";\r\nimport { getCurrentQuote, getQuoteChangedStatus } from \"../selectors/getCurrentQuote\";\r\n\r\nconst mapState = (state: ReduxState) => ({\r\n  bookmarkTree: getBookmarkTree(state),\r\n  areBookmarksReady: state.session.areBookmarksReady,\r\n  currentTheme: getCurrentTheme(state),\r\n  currentQuote: getCurrentQuote(state),\r\n  quoteChangeStatus: getQuoteChangedStatus(state)\r\n});\r\n\r\nexport const App: FC = () => {\r\n  const { areBookmarksReady, bookmarkTree, currentTheme, currentQuote, quoteChangeStatus } = useMappedState(\r\n    mapState\r\n  );\r\n  const { retrieveBookmarks, rehydrate } = useMappedActions(actions);\r\n\r\n  const isBookmarkTreeEmpty = isEmpty(bookmarkTree);\r\n\r\n  useOnMount(() => {\r\n    rehydrate();\r\n    retrieveBookmarks();\r\n  });\r\n\r\n  if (!areBookmarksReady) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={currentTheme}>\r\n      <Root>\r\n        <Header />\r\n        <QuoteComponent quote={currentQuote.text} isQuoteChanged={quoteChangeStatus} />\r\n        {!isBookmarkTreeEmpty && (\r\n          <Main>\r\n            <FolderList bookmarkTree={bookmarkTree} />\r\n          </Main>\r\n        )}\r\n        {isBookmarkTreeEmpty && <NoResult />}\r\n      </Root>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nconst fadeIn = keyframes`\r\n  from { opacity: 0;}\r\n  to { opacity: 1; }\r\n`;\r\n\r\nconst Root = styled.div`\r\n  animation: ${fadeIn} 0.5s ease-in-out both;\r\n  text-align: center;\r\n  transition: all 0.6s ease-out;\r\n  height: 100%;\r\n  min-height: 100vh;\r\n  overflow: hidden;\r\n  position: relative;\r\n  background-position: 0 -30px;\r\n\r\n  &::before {\r\n    content: \"\";\r\n    position: fixed;\r\n    width: 100%;\r\n    height: 100vh;\r\n    top: 0;\r\n    left: 0;\r\n    will-change: transform;\r\n    z-index: -1;\r\n    background: ${(props: { theme: Theme }) => props.theme.appBackground};\r\n    background-position: 0 0;\r\n    transition: all .3s linear;\r\n  }\r\n`;\r\n\r\nconst Main = styled.main`\r\n  animation: ${fadeIn} 0.5s ease-in-out both;\r\n  animation-delay: 0.1s;\r\n  padding: 0 40px;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n","/**\r\n * Global styles applied to the entire app\r\n */\r\nimport { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\r\n      \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\r\n      sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n  }\r\n  code {\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\r\n      monospace;\r\n  }\r\n`;\r\n","import { pull } from \"lodash\";\r\nimport { produce } from \"immer\";\r\nimport { getType } from \"typesafe-actions\";\r\nimport { moveArrayElement } from \"./../utils/moveArrayElement\";\r\nimport { compareIndexes } from \"./../utils/compareIndexes\";\r\nimport { actions } from \"../actions\";\r\nimport { ReduxAction } from \"../types/ReduxAction\";\r\nimport { ChromeBookmark } from \"../types/ChromeBookmark\";\r\n\r\nexport type State = {\r\n  readonly foldersById: { [id: string]: ChromeBookmark };\r\n  readonly bookmarksById: { [id: string]: ChromeBookmark };\r\n  readonly hiddenFolderIds: string[];\r\n};\r\n\r\nexport const initialState: State = {\r\n  foldersById: {},\r\n  bookmarksById: {},\r\n  hiddenFolderIds: []\r\n};\r\n\r\nexport const bookmarksReducer = (\r\n  state: State = initialState,\r\n  action: ReduxAction\r\n): State => {\r\n  return produce(state, draft => {\r\n    switch (action.type) {\r\n      case getType(actions.retrieveBookmarksSuccess): {\r\n        draft.foldersById = action.payload.foldersById;\r\n        draft.bookmarksById = action.payload.bookmarksById;\r\n        break;\r\n      }\r\n      case getType(actions.hideFolder): {\r\n        const folderId = action.payload;\r\n        if (draft.hiddenFolderIds.indexOf(folderId) === -1) {\r\n          draft.hiddenFolderIds.push(folderId);\r\n        }\r\n        break;\r\n      }\r\n      case getType(actions.showFolder): {\r\n        const folderId = action.payload;\r\n        if (draft.hiddenFolderIds.indexOf(folderId) > -1) {\r\n          pull(draft.hiddenFolderIds, folderId);\r\n        }\r\n        break;\r\n      }\r\n      case getType(actions.moveBookmark): {\r\n        // This action is triggered when the user moves a bookmark to a new\r\n        // position. Since the reducer structure keeps the bookmarks in an\r\n        // unordered structure (an object) we need to do some tricks to update\r\n        // its position in the state.\r\n        const { bookmark, oldIndex, newIndex } = action.payload;\r\n        // First, we put all the folder's bookmarks in an array and we sort it\r\n        // to get their current position (pre-sort)...\r\n        let bookmarks = Object.values(state.bookmarksById)\r\n          .filter(x => x.parentId === bookmark.parentId)\r\n          .sort(compareIndexes);\r\n        // Then, given the updated bookmark position, we move it in the array...\r\n        bookmarks = moveArrayElement(bookmarks, oldIndex, newIndex);\r\n        // And lastly we update the state by updating the index of all the\r\n        // elements in the folder\r\n        bookmarks.forEach((x, index) => {\r\n          draft.bookmarksById[x.id].index = index;\r\n        });\r\n        break;\r\n      }\r\n      case getType(actions.rehydrateSuccess): {\r\n        const persistedState = action.payload;\r\n        if (persistedState.bookmarks) {\r\n          return {\r\n            ...initialState,\r\n            ...persistedState.bookmarks\r\n          };\r\n        }\r\n        break;\r\n      }\r\n      default:\r\n        return state;\r\n    }\r\n  });\r\n};\r\n","import { produce } from \"immer\";\r\nimport { getType } from \"typesafe-actions\";\r\nimport { actions } from \"../actions\";\r\nimport { ReduxAction } from \"../types/ReduxAction\";\r\n\r\nexport type State = {\r\n  readonly query: string;\r\n  readonly isShowingHiddenBookmarks: boolean;\r\n  readonly isRetrievingBookmarks: boolean;\r\n  readonly areBookmarksReady: boolean;\r\n  readonly isDragging: boolean;\r\n};\r\n\r\nexport const initialState: State = {\r\n  query: \"\",\r\n  isShowingHiddenBookmarks: false,\r\n  isRetrievingBookmarks: false,\r\n  isDragging: false,\r\n  areBookmarksReady: false\r\n};\r\n\r\nexport const sessionReducer = (\r\n  state: State = initialState,\r\n  action: ReduxAction\r\n): State => {\r\n  return produce(state, draft => {\r\n    switch (action.type) {\r\n      case getType(actions.retrieveBookmarks): {\r\n        draft.isRetrievingBookmarks = true;\r\n        break;\r\n      }\r\n      case getType(actions.retrieveBookmarksSuccess): {\r\n        draft.isRetrievingBookmarks = false;\r\n        draft.areBookmarksReady = true;\r\n        break;\r\n      }\r\n      case getType(actions.rehydrateSuccess): {\r\n        if (action.payload.bookmarks) {\r\n          draft.areBookmarksReady = true;\r\n        }\r\n        break;\r\n      }\r\n      case getType(actions.toggleShowHiddenBookmarks): {\r\n        draft.isShowingHiddenBookmarks = !state.isShowingHiddenBookmarks;\r\n        break;\r\n      }\r\n      case getType(actions.setQuery): {\r\n        draft.query = action.payload;\r\n        break;\r\n      }\r\n      default:\r\n        return state;\r\n    }\r\n  });\r\n};\r\n","export const getRandomNumber = (currentNumber: number, maxNumber: number) => {\r\n    const randomNumber = Math.floor(Math.random() * Math.floor(maxNumber));\r\n    return currentNumber === randomNumber ? (randomNumber + 1 === maxNumber ? 0 : randomNumber + 1) : randomNumber;\r\n}","import { produce } from \"immer\";\r\nimport { getType } from \"typesafe-actions\";\r\nimport { actions } from \"../actions\";\r\nimport { ReduxAction } from \"../types/ReduxAction\";\r\nimport { themes } from \"../config/themes\";\r\nimport { getRandomNumber } from \"../utils/getRandomQuote\";\r\n\r\nexport type State = {\r\n  availableThemes: typeof themes;\r\n  currentThemeId: string;\r\n};\r\n\r\nexport const initialState: State = {\r\n  availableThemes: themes,\r\n  currentThemeId: \"themeMoonlit\"\r\n};\r\n\r\nexport const themesReducer = (\r\n  state: State = initialState,\r\n  action: ReduxAction\r\n): State => {\r\n  return produce(state, draft => {\r\n    switch (action.type) {\r\n      case getType(actions.rehydrateSuccess): {\r\n        const persistedState = action.payload;\r\n        console.log(persistedState.themes);\r\n        if (persistedState.themes) {\r\n          return {\r\n            ...initialState,\r\n            currentThemeId: persistedState.themes.currentThemeId\r\n          };\r\n        }\r\n        break;\r\n      }\r\n      case getType(actions.goToNextTheme): {\r\n        const availableThemeIds = Object.keys(state.availableThemes);\r\n        const currentThemeIndex = availableThemeIds.indexOf(\r\n          state.currentThemeId\r\n        );\r\n        const nextThemeIndex = getRandomNumber(currentThemeIndex, availableThemeIds.length)\r\n        const nextThemeId = availableThemeIds[nextThemeIndex];\r\n        state.currentThemeId = nextThemeId;\r\n        break;\r\n      }\r\n      default:\r\n        return state;\r\n    }\r\n  });\r\n};\r\n","import { Theme } from \"./../types/Theme\";\r\nimport themeDarkOcean from \"../assets/themes/dark-ocean.json\";\r\nimport themeMoonlit from \"../assets/themes/moonlit-asteriod.json\";\r\nimport themeVision from \"../assets/themes/visions-of-grandeur.json\";\r\nimport themeJupiter from \"../assets/themes/jupiter.json\";\r\nimport themeSunset from \"../assets/themes/sunset.json\";\r\nimport themeMantle from \"../assets/themes/mantle.json\";\r\n\r\nexport const themes: { [id: string]: Theme } = {\r\n  themeJupiter,\r\n  themeDarkOcean,\r\n  themeVision,\r\n  themeSunset,\r\n  themeMantle,\r\n  themeMoonlit,\r\n};\r\n","import { produce } from \"immer\";\r\nimport { getType } from \"typesafe-actions\";\r\nimport { actions } from \"../actions\";\r\nimport { ReduxAction } from \"../types/ReduxAction\";\r\nimport quotes from \"../assets/quotes.json\";\r\nimport { getRandomNumber } from \"../utils/getRandomQuote\";\r\n\r\nexport type State = {\r\n    availableQuotes: typeof quotes;\r\n    currentQuoteId: number;\r\n    isQuoteChanged: boolean;\r\n};\r\n\r\nexport const initialState: State = {\r\n    availableQuotes: quotes,\r\n    currentQuoteId: 0,\r\n    isQuoteChanged: false\r\n};\r\n\r\nexport const quotesReducer = (\r\n    state: State = initialState,\r\n    action: ReduxAction\r\n): State => {\r\n    return produce(state, draft => {\r\n        switch (action.type) {\r\n            case getType(actions.rehydrateSuccess): {\r\n                const persistedState = action.payload;\r\n                if (persistedState.quotes) {\r\n                    return {\r\n                        ...initialState,\r\n                        currentQuoteId: getRandomNumber(initialState.currentQuoteId, initialState.availableQuotes.length)\r\n                    };\r\n                }\r\n                break;\r\n            }\r\n            case getType(actions.goToNextQuote): {\r\n                const availableQuotes = state.availableQuotes;\r\n                const tempNextQuoteId = getRandomNumber(initialState.currentQuoteId, state.availableQuotes.length);\r\n                const nextQuoteId = tempNextQuoteId === availableQuotes.length ? 0 : tempNextQuoteId;\r\n                return {\r\n                    ...initialState,\r\n                    currentQuoteId: nextQuoteId,\r\n                    isQuoteChanged: !state.isQuoteChanged\r\n                }\r\n            }\r\n            default:\r\n                return state;\r\n        }\r\n    });\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { bookmarksReducer } from \"./bookmarksReducer\";\r\nimport { sessionReducer } from \"./sessionReducer\";\r\nimport { themesReducer } from \"./themesReducer\";\r\nimport { quotesReducer } from \"./quotesReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  bookmarks: bookmarksReducer,\r\n  session: sessionReducer,\r\n  themes: themesReducer,\r\n  quotes: quotesReducer\r\n});\r\n","export const moveArrayElement = <T>(\r\n  array: T[],\r\n  fromIndex: number,\r\n  toIndex: number\r\n) => {\r\n  if (fromIndex === toIndex) {\r\n    return array;\r\n  }\r\n\r\n  const newArray = [...array];\r\n\r\n  const target = newArray[fromIndex];\r\n  const inc = toIndex < fromIndex ? -1 : 1;\r\n\r\n  for (let i = fromIndex; i !== toIndex; i += inc) {\r\n    newArray[i] = newArray[i + inc];\r\n  }\r\n\r\n  newArray[toIndex] = target;\r\n\r\n  return newArray;\r\n};\r\n","import { Bookmark } from \"./../types/Bookmark\";\r\nimport { IS_LIVE_EXAMPLE } from \"./../config/constants\";\r\nimport { delay } from \"../utils/delay\";\r\nimport bookmarksFixture from \"../fixtures/bookmarks.json\";\r\nimport { ChromeBookmark } from \"./../types/ChromeBookmark\";\r\nimport { NODE_ENV } from \"../config/constants\";\r\n\r\nexport const getBookmarks = async () => {\r\n  if (NODE_ENV === \"development\" || IS_LIVE_EXAMPLE) {\r\n    await delay(100);\r\n    return bookmarksFixture;\r\n  } else {\r\n    return new Promise<ChromeBookmark[]>(res => chrome.bookmarks.getTree(res));\r\n  }\r\n};\r\n\r\nexport const moveBookmark = async (\r\n  bookmark: Bookmark,\r\n  oldIndex: number,\r\n  newIndex: number\r\n) => {\r\n  if (NODE_ENV === \"development\" || IS_LIVE_EXAMPLE) {\r\n    return;\r\n  } else {\r\n    return new Promise<ChromeBookmark>(resolve => {\r\n      // The Chrome move API seems to have a bug when you move a bookmark to\r\n      // a position where the new index is greater than the current one.\r\n      // Increasing the updated index position by 1 for this specific case\r\n      // seems to fix the issue: https://stackoverflow.com/q/13264060/4836602\r\n      let fixedNewIndex = newIndex;\r\n      if (oldIndex < newIndex) {\r\n        fixedNewIndex++;\r\n      }\r\n      chrome.bookmarks.move(\r\n        bookmark.id,\r\n        { index: fixedNewIndex, parentId: bookmark.parentId },\r\n        resolve\r\n      );\r\n    });\r\n  }\r\n};\r\n","import { ChromeBookmark } from \"./../types/ChromeBookmark\";\r\n\r\ntype ChromeBookmarksById = { [id: string]: ChromeBookmark };\r\n\r\nconst withoutChildren = (bookmark: ChromeBookmark) => ({\r\n  index: bookmark.index,\r\n  title: bookmark.title,\r\n  url: bookmark.url,\r\n  dateGroupModified: bookmark.dateGroupModified,\r\n  id: bookmark.id,\r\n  parentId: bookmark.parentId,\r\n  unmodifiable: bookmark.unmodifiable\r\n});\r\n\r\nexport const parseChromeBookmarks = (chromeBookmarks: ChromeBookmark[]) => {\r\n  const foldersById: ChromeBookmarksById = {};\r\n  const bookmarksById: ChromeBookmarksById = {};\r\n  const parseBookmarkNodes = (nodes: ChromeBookmark[]) => {\r\n    nodes.forEach(node => {\r\n      if (node.children) {\r\n        foldersById[node.id] = withoutChildren(node);\r\n        parseBookmarkNodes(node.children);\r\n      } else {\r\n        bookmarksById[node.id] = node;\r\n      }\r\n    });\r\n  };\r\n  parseBookmarkNodes(chromeBookmarks);\r\n\r\n  return { foldersById, bookmarksById };\r\n};\r\n","import { put } from \"redux-saga/effects\";\r\nimport { actions } from \"../actions/index\";\r\nimport { getBookmarks } from \"../services/chromeService\";\r\nimport { parseChromeBookmarks } from \"../utils/parseChromeBookmarks\";\r\n\r\nexport const retrieveBookmarksSaga = function*() {\r\n  const chromeBookmarks = yield getBookmarks();\r\n  const parsedBookmarks = parseChromeBookmarks(chromeBookmarks);\r\n  yield put(\r\n    actions.retrieveBookmarksSuccess(\r\n      parsedBookmarks.foldersById,\r\n      parsedBookmarks.bookmarksById\r\n    )\r\n  );\r\n};\r\n","import { put } from \"redux-saga/effects\";\r\nimport { actions } from \"./../actions/index\";\r\n\r\nexport const rehydrateSaga = function*() {\r\n  const storedReduxState = localStorage.getItem(\"REDUX_STATE\");\r\n  const reduxState = storedReduxState ? JSON.parse(storedReduxState) : {};\r\n  yield put(actions.rehydrateSuccess(reduxState));\r\n};\r\n","import { select } from \"redux-saga/effects\";\r\nimport { ReduxState } from \"./../types/ReduxState\";\r\nimport { ReduxPersistedState } from \"./../types/ReduxPersistedState\";\r\n\r\nexport const persistSaga = function* () {\r\n  const reduxState: ReduxState = yield select();\r\n  const reduxStateToPersist: ReduxPersistedState = {\r\n    bookmarks: reduxState.bookmarks,\r\n    themes: reduxState.themes,\r\n    quotes: reduxState.quotes\r\n  };\r\n  localStorage.setItem(\"REDUX_STATE\", JSON.stringify(reduxStateToPersist));\r\n};\r\n","import { ActionType } from \"typesafe-actions\";\r\nimport { put } from \"redux-saga/effects\";\r\nimport { moveBookmark } from \"./../services/chromeService\";\r\nimport { actions } from \"../actions/index\";\r\n\r\n// When the user sorts a bookmark item trough drag and drop we also update it\r\n// in the Chrome bookmarks\r\nexport const moveBookmarkSaga = function*(\r\n  action: ActionType<typeof actions.moveBookmark>\r\n) {\r\n  const { bookmark, oldIndex, newIndex } = action.payload;\r\n  yield moveBookmark(bookmark, oldIndex, newIndex);\r\n  yield put(actions.moveBookmarkSuccess());\r\n};\r\n","import { all, takeEvery } from \"redux-saga/effects\";\r\nimport { getType } from \"typesafe-actions\";\r\nimport { actions } from \"./../actions/index\";\r\nimport { retrieveBookmarksSaga } from \"./retrieveBookmarksSaga\";\r\nimport { rehydrateSaga } from \"./rehydrateSaga\";\r\nimport { persistSaga } from \"./persistSaga\";\r\nimport { moveBookmarkSaga } from \"./moveBookmarkSaga\";\r\n\r\nexport const rootSaga = function* () {\r\n  yield all([\r\n    takeEvery(getType(actions.retrieveBookmarks), retrieveBookmarksSaga),\r\n    takeEvery(getType(actions.rehydrate), rehydrateSaga),\r\n    takeEvery(getType(actions.moveBookmark), moveBookmarkSaga),\r\n    takeEvery(\r\n      [\r\n        getType(actions.showFolder),\r\n        getType(actions.hideFolder),\r\n        getType(actions.goToNextTheme),\r\n        getType(actions.retrieveBookmarksSuccess),\r\n        getType(actions.goToNextQuote)\r\n      ],\r\n      persistSaga\r\n    )\r\n  ]);\r\n};\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { createLogger } from \"redux-logger\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { rootReducer } from \"../reducers\";\r\nimport { rootSaga } from \"../sagas\";\r\nimport { NODE_ENV } from \"../config/constants\";\r\n\r\nconst loggerMiddleware = createLogger({\r\n  collapsed: true,\r\n  duration: true\r\n});\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport const createReduxStore = (initialState?: {}) => {\r\n  const middlewares = [];\r\n  if (NODE_ENV === \"development\") {\r\n    middlewares.push(loggerMiddleware);\r\n  }\r\n  middlewares.push(sagaMiddleware);\r\n  const enhancer = compose(applyMiddleware(...middlewares));\r\n  const store = createStore(rootReducer, initialState!, enhancer);\r\n  sagaMiddleware.run(rootSaga);\r\n  return store;\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { StoreContext } from \"redux-react-hook\";\r\nimport { App } from \"./components/App\";\r\nimport { GlobalStyle } from \"./components/GlobalStyle\";\r\nimport { createReduxStore } from \"./utils/createReduxStore\";\r\n\r\nconst store = createReduxStore();\r\n\r\nReactDOM.render(\r\n  <>\r\n    <GlobalStyle />\r\n    <StoreContext.Provider value={store}>\r\n      <App />\r\n    </StoreContext.Provider>\r\n  </>,\r\n  document.getElementById(\"root\")\r\n);\r\n","import { useEffect } from \"react\";\r\n\r\ntype EffectCallback = () => void | (() => void);\r\n\r\nexport function useOnMount(onMount: EffectCallback) {\r\n  useEffect(onMount, []);\r\n}\r\n"],"sourceRoot":""}